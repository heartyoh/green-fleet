3.1.16 (Brainy Betty)
ebbc5c0e5ad66b5b0775461a66971f8f83f180be
o:Sass::Tree::RootNode
:@template"G!@import "compass/layout/grid-background";

// The base font size.
$base-font-size: 16px !default;

// The base line height determines the basic unit of vertical rhythm.
$base-line-height: 24px !default;

// Set the default border style for rhythm borders.
$default-rhythm-border-style: solid !default;

// The IE font ratio is a fact of life. Deal with it.
$ie-font-ratio: 16px / 100%;

// Set to false if you want to use absolute pixels in sizing your typography.
$relative-font-sizing: true !default;

// Allows the `adjust-font-size-to` mixin and the `lines-for-font-size` function
// to round the line height to the nearest half line height instead of the
// nearest integral line height to avoid large spacing between lines.
$round-to-nearest-half-line: false !default;

// Ensure there is at least this many pixels
// of vertical padding above and below the text.
$min-line-padding: 2px !default;

// $base-font-size but in your output unit of choice.
// Defaults to 1em when `$relative-font-sizing` is true.
$font-unit: if($relative-font-sizing, 1em, $base-font-size) !default;

// The basic unit of font rhythm.
$base-rhythm-unit: $base-line-height / $base-font-size * $font-unit;

// The leader is the amount of whitespace in a line.
// It might be useful in your calculations.
$base-leader: ($base-line-height - $base-font-size) * $font-unit / $base-font-size;

// The half-leader is the amount of whitespace above and below a line.
// It might be useful in your calculations.
$base-half-leader: $base-leader / 2;

// True if a number has a relative unit.
@function relative-unit($number) {
  @return unit($number) == "%" or unit($number) == "em" or unit($number) == "rem"
}

// True if a number has an absolute unit.
@function absolute-unit($number) {
  @return not (relative-unit($number) or unitless($number));
}

@if $relative-font-sizing and not relative-unit($font-unit) {
  @warn "$relative-font-sizing is true but $font-unit is set to #{$font-unit} which is not a relative unit.";
}

// Establishes a font baseline for the given font-size.
@mixin establish-baseline($font-size: $base-font-size) {
  body {
    font-size: $font-size / $ie-font-ratio;
    @include adjust-leading-to(1, if($relative-font-sizing, $font-size, $base-font-size));
  }
  html>body {
    font-size: $font-size;
  }
}

// resets the baseline to 1 leading unit
@mixin reset-baseline {
  @include adjust-leading-to(1, if($relative-font-sizing, $base-font-size, $base-font-size));
}

// Show a background image that can be used to debug your alignments.
// Include the $img argument if you would rather use your own image than the
// Compass default gradient image.
@mixin debug-vertical-alignment($img: false) {
  @if $img {
    background: image-url($img);
  } @else {
    @include baseline-grid-background($base-rhythm-unit);
  }
}

// Adjust a block to have a different font size and line height to maintain the
// rhythm. $lines specifies how many multiples of the baseline rhythm each line
// of this font should use up. It does not have to be an integer, but it
// defaults to the smallest integer that is large enough to fit the font.
// Use $from-size to adjust from a font-size other than the base font-size.
@mixin adjust-font-size-to($to-size, $lines: lines-for-font-size($to-size), $from-size: $base-font-size) {
  @if not $relative-font-sizing and $from-size != $base-font-size {
    @warn "$relative-font-sizing is false but a relative font size was passed to adjust-font-size-to";
  }
  font-size: $font-unit * $to-size / $from-size;
  @include adjust-leading-to($lines, if($relative-font-sizing, $to-size, $base-font-size));
}

// Adjust a block to have different line height to maintain the rhythm.
// $lines specifies how many multiples of the baseline rhythm each line of this
// font should use up. It does not have to be an integer, but it defaults to the
// smallest integer that is large enough to fit the font.
@mixin adjust-leading-to($lines, $font-size: $base-font-size) {
  line-height: rhythm($lines, $font-size);
}

// Calculate rhythm units.
@function rhythm(
  $lines: 1,
  $font-size: $base-font-size
) {
  @if not $relative-font-sizing and $font-size != $base-font-size {
    @warn "$relative-font-sizing is false but a relative font size was passed to the rhythm function";
  }
  $rhythm: $font-unit * $lines * $base-line-height / $font-size;
  // Round the pixels down to nearest integer.
  @if unit($rhythm) == px {
    $rhythm: floor($rhythm);
  }
  @return $rhythm;
}

// Calculate the minimum multiple of rhythm units needed to contain the font-size.
@function lines-for-font-size($font-size) {
  $lines: if($round-to-nearest-half-line,
              ceil(2 * $font-size / $base-line-height) / 2,
              ceil($font-size / $base-line-height));
  @if $lines * $base-line-height - $font-size < $min-line-padding * 2 {
    $lines: $lines + if($round-to-nearest-half-line, 0.5, 1);
  }
  @return $lines;
}

// Apply leading whitespace. The $property can be margin or padding.
@mixin leader($lines: 1, $font-size: $base-font-size, $property: margin) {
  #{$property}-top: rhythm($lines, $font-size);
}

// Apply leading whitespace as padding.
@mixin padding-leader($lines: 1, $font-size: $base-font-size) {
  padding-top: rhythm($lines, $font-size);
}

// Apply leading whitespace as margin.
@mixin margin-leader($lines: 1, $font-size: $base-font-size) {
  margin-top: rhythm($lines, $font-size);
}

// Apply trailing whitespace. The $property can be margin or padding.
@mixin trailer($lines: 1, $font-size: $base-font-size, $property: margin) {
  #{$property}-bottom: rhythm($lines, $font-size);
}

// Apply trailing whitespace as padding.
@mixin padding-trailer($lines: 1, $font-size: $base-font-size) {
  padding-bottom: rhythm($lines, $font-size);
}

// Apply trailing whitespace as margin.
@mixin margin-trailer($lines: 1, $font-size: $base-font-size) {
  margin-bottom: rhythm($lines, $font-size);
}

// Shorthand mixin to apply whitespace for top and bottom margins and padding.
@mixin rhythm($leader: 0, $padding-leader: 0, $padding-trailer: 0, $trailer: 0, $font-size: $base-font-size) {
  @include leader($leader, $font-size);
  @include padding-leader($padding-leader, $font-size);
  @include padding-trailer($padding-trailer, $font-size);
  @include trailer($trailer, $font-size);
}

// Apply a border and whitespace to any side without destroying the vertical
// rhythm. The whitespace must be greater than the width of the border.
@mixin apply-side-rhythm-border($side, $width: 1px, $lines: 1, $font-size: $base-font-size, $border-style: $default-rhythm-border-style) {
  @if not $relative-font-sizing and $font-size != $base-font-size {
    @warn "$relative-font-sizing is false but a relative font size was passed to apply-side-rhythm-border";
  }
  border-#{$side}: {
    style: $border-style;
    width: $font-unit * $width / $font-size;
  };
  padding-#{$side}: $font-unit / $font-size * ($lines * $base-line-height - $width);
}

// Apply borders and whitespace equally to all sides.
@mixin rhythm-borders($width: 1px, $lines: 1, $font-size: $base-font-size, $border-style: $default-rhythm-border-style) {
  @if not $relative-font-sizing and $font-size != $base-font-size {
    @warn "$relative-font-sizing is false but a relative font size was passed to rhythm-borders";
  }
  border: {
    style: $border-style;
    width: $font-unit * $width / $font-size;
  };
  padding: $font-unit / $font-size * ($lines * $base-line-height - $width);
}

// Apply a leading border.
@mixin leading-border($width: 1px, $lines: 1, $font-size: $base-font-size, $border-style: $default-rhythm-border-style) {
  @include apply-side-rhythm-border(top, $width, $lines, $font-size, $border-style);
}

// Apply a trailing border.
@mixin trailing-border($width: 1px, $lines: 1, $font-size: $base-font-size, $border-style: $default-rhythm-border-style) {
  @include apply-side-rhythm-border(bottom, $width, $lines, $font-size, $border-style);
}

// Apply both leading and trailing borders.
@mixin horizontal-borders($width: 1px, $lines: 1, $font-size: $base-font-size, $border-style: $default-rhythm-border-style) {
  @include leading-border($width, $lines, $font-size, $border-style);
  @include trailing-border($width, $lines, $font-size, $border-style);
}

// Alias for `horizontal-borders` mixin.
@mixin h-borders($width: 1px, $lines: 1, $font-size: $base-font-size, $border-style: $default-rhythm-border-style) {
  @include horizontal-borders($width, $lines, $font-size, $border-style);
}
:@has_childrenT:@options{ :@children[Io:Sass::Tree::ImportNode
;0;@;	[ :@imported_filename"#compass/layout/grid-background:
@lineio:Sass::Tree::CommentNode:@silenti ;@;	[ :@value["/* The base font size. */;i:
@loud0o:Sass::Tree::VariableNode:
@expro:Sass::Script::Number:@denominator_units[ :@numerator_units["px;@:@original"	16px;i;i	:
@name"base-font-size;@;	[ ;i	:@guarded"!defaulto;;i ;@;	[ ;["M/* The base line height determines the basic unit of vertical rhythm. */;i;0o;;o;;[ ;["px;@;"	24px;i;i;"base-line-height;@;	[ ;i;"!defaulto;;i ;@;	[ ;[";/* Set the default border style for rhythm borders. */;i;0o;;o:Sass::Script::String	:
@type:identifier;@;"
solid;i;" default-rhythm-border-style;@;	[ ;i;"!defaulto;;i ;@;	[ ;["=/* The IE font ratio is a fact of life. Deal with it. */;i;0o;;o:Sass::Script::Operation
:@operator:div:@operand2o;;[ ;["%;@;"	100%;ii;i;@:@operand1o;;[ ;["px;@;"	16px;i;i;i;"ie-font-ratio;@;	[ ;i;0o;;i ;@;	[ ;["U/* Set to false if you want to use absolute pixels in sizing your typography. */;i;0o;;o:Sass::Script::Bool;@;T;i;"relative-font-sizing;@;	[ ;i;"!defaulto;;i ;@;	[ ;["ä/* Allows the `adjust-font-size-to` mixin and the `lines-for-font-size` function
 * to round the line height to the nearest half line height instead of the
 * nearest integral line height to avoid large spacing between lines. */;i;0o;;o;!;@;F;i;"round-to-nearest-half-line;@;	[ ;i;"!defaulto;;i ;@;	[ ;["e/* Ensure there is at least this many pixels
 * of vertical padding above and below the text. */;i;0o;;o;;[ ;["px;@;"2px;i;i;"min-line-padding;@;	[ ;i;"!defaulto;;i ;@;	[ ;["v/* $base-font-size but in your output unit of choice.
 * Defaults to 1em when `$relative-font-sizing` is true. */;i ;0o;;o:Sass::Script::Funcall
;"if;@:@keywords{ ;i":
@args[o:Sass::Script::Variable	;"relative-font-sizing:@underscored_name"relative_font_sizing;@;i"o;;[ ;["em;@;"1em;i;i"o;%	;"base-font-size;&"base_font_size;@;i";"font-unit;@;	[ ;i";"!defaulto;;i ;@;	[ ;[")/* The basic unit of font rhythm. */;i$;0o;;o;
;:
times;o;%	;"font-unit;&"font_unit;@;i%;@; o;
;;;o;%	;"base-font-size;&"base_font_size;@;i%;@; o;%	;"base-line-height;&"base_line_height;@;i%;i%;i%;"base-rhythm-unit;@;	[ ;i%;0o;;i ;@;	[ ;["h/* The leader is the amount of whitespace in a line.
 * It might be useful in your calculations. */;i';0o;;o;
;;;o;%	;"base-font-size;&"base_font_size;@;i);@; o;
;;';o;%	;"font-unit;&"font_unit;@;i);@; o;
;:
minus;o;%	;"base-font-size;&"base_font_size;@;i);@; o;%	;"base-line-height;&"base_line_height;@;i);i);i);i);"base-leader;@;	[ ;i);0o;;i ;@;	[ ;["z/* The half-leader is the amount of whitespace above and below a line.
 * It might be useful in your calculations. */;i+;0o;;o;
;;;o;;[ ;[ ;@;"2;i;i-;@; o;%	;"base-leader;&"base_leader;@;i-;i-;"base-half-leader;@;	[ ;i-;0o;;i ;@;	[ ;["0/* True if a number has a relative unit. */;i/;0o:Sass::Tree::FunctionNode;"relative-unit;T;@;	[o:Sass::Tree::ReturnNode	;o;
;:or;o;
;:eq;o;	;:string;@;"rem;i1;@; o;"
;"	unit;@;#{ ;i1;$[o;%	;"number;&"number;@;i1;i1;@; o;
;;+;o;
;;,;o;	;;-;@;"em;i1;@; o;"
;"	unit;@;#{ ;i1;$[o;%	;"number;&"number;@;i1;i1;@; o;
;;,;o;	;;-;@;"%;i1;@; o;"
;"	unit;@;#{ ;i1;$[o;%	;"number;&"number;@;i1;i1;i1;i1;@;	[ ;i2;i0;$[[o;%;"number;&"number;@0o;;i ;@;	[ ;["1/* True if a number has an absolute unit. */;i4;0o;);"absolute-unit;T;@;	[o;*	;o:!Sass::Script::UnaryOperation	;:not;@;i6:@operando;
;;+;o;"
;"unitless;@;#{ ;i6;$[o;%	;"number;&"number;@;i6;@; o;"
;"relative-unit;@;#{ ;i6;$[o;%	;"number;&"number;@;i6;i6;@;	[ ;i6;i5;$[[o;%;"number;&"number;@0u:Sass::Tree::IfNode¬[o:Sass::Script::Operation
:@operator:and:@operand2o:!Sass::Script::UnaryOperation	;:not:@options{ :
@linei9:@operando:Sass::Script::Funcall
:
@name"relative-unit;@:@keywords{ ;i9:
@args[o:Sass::Script::Variable	;"font-unit:@underscored_name"font_unit;@;i9;@:@operand1o;	;"relative-font-sizing;"relative_font_sizing;@;i9;i90[o:Sass::Tree::WarnNode	:
@expro:&Sass::Script::StringInterpolation
:@aftero:Sass::Script::String	:
@type:string;@:@value"# which is not a relative unit.;i::	@mido;	;"font-unit;"font_unit;@;i:;@:@beforeo;	;;;@;"<$relative-font-sizing is true but $font-unit is set to ;i:;i:;@:@children[ ;i:o;;i ;@;	[ ;["?/* Establishes a font baseline for the given font-size. */;i=;0o:Sass::Tree::MixinDefNode;"establish-baseline;T;@;	[o:Sass::Tree::RuleNode;T:
@rule["	body;@:@parsed_ruleso:"Sass::Selector::CommaSequence:@members[o:Sass::Selector::Sequence;7[o:#Sass::Selector::SimpleSequence;7[o:Sass::Selector::Element	:@namespace0;["	body:@filename" ;i?;<@
;i?;<@
;i?;	[o:Sass::Tree::PropNode;["font-size;@:@prop_syntax:new;	[ ;o;
;;;o;%	;"ie-font-ratio;&"ie_font_ratio;@;i@;@; o;%	;"font-size;&"font_size;@;i@;i@;i@:
@tabsi o:Sass::Tree::MixinNode;"adjust-leading-to;@;#{ ;	[ ;iA;$[o;;@¢;[ ;@;"1;i;iAo;"
;"if;@;#{ ;iA;$[o;%	;"relative-font-sizing;&"relative_font_sizing;@;iAo;%	;"font-size;&"font_size;@;iAo;%	;"base-font-size;&"base_font_size;@;iA;i?;@i o;3;T;4["html>body;@;5o;6;7[o;8;7[o;9;7[o;:	;;0;["	html;<" ;iC;<@8;iC">o;9;7[o;:	;;0;["	body;<@8;iC;<@8;iC;<@8;iC;	[o;=;["font-size;@;>;?;	[ ;o;%	;"font-size;&"font_size;@;iD;iD;@i ;iC;@i ;i>;$[[o;%;"font-size;&"font_size;@o;%	;"base-font-size;&"base_font_size;@;i>o;;i ;@;	[ ;["0/* resets the baseline to 1 leading unit */;iH;0o;2;"reset-baseline;T;@;	[o;A;"adjust-leading-to;@;#{ ;	[ ;iJ;$[o;;@¢;[ ;@;"1;i;iJo;"
;"if;@;#{ ;iJ;$[o;%	;"relative-font-sizing;&"relative_font_sizing;@;iJo;%	;"base-font-size;&"base_font_size;@;iJo;%	;"base-font-size;&"base_font_size;@;iJ;iI;$[ o;;i ;@;	[ ;["¸/* Show a background image that can be used to debug your alignments.
 * Include the $img argument if you would rather use your own image than the
 * Compass default gradient image. */;iM;0o;2;"debug-vertical-alignment;T;@;	[u;1[o:Sass::Script::Variable	:
@name"img:@underscored_name"img:@options{ :
@lineiQu:Sass::Tree::IfNodeÕ[00[o:Sass::Tree::MixinNode:
@name"baseline-grid-background:@options{ :@keywords{ :@children[ :
@lineiT:
@args[o:Sass::Script::Variable	;"base-rhythm-unit:@underscored_name"base_rhythm_unit;@	;
iT[o:Sass::Tree::PropNode;["background;@	:@prop_syntax:new:@children[ :@valueo:Sass::Script::Funcall
;"image-url;@	:@keywords{ ;	iR:
@args[o; 	;"img;"img;@	;	iR;	iR:
@tabsi ;iP;$[[o;%;"img;&"img;@o;!;@;F;iPo;;i ;@;	[ ;["/* Adjust a block to have a different font size and line height to maintain the
 * rhythm. $lines specifies how many multiples of the baseline rhythm each line
 * of this font should use up. It does not have to be an integer, but it
 * defaults to the smallest integer that is large enough to fit the font.
 * Use $from-size to adjust from a font-size other than the base font-size. */;iX;0o;2;"adjust-font-size-to;T;@;	[u;11[o:Sass::Script::Operation
:@operator:and:@operand2o; 
;:neq;o:Sass::Script::Variable	:
@name"base-font-size:@underscored_name"base_font_size:@options{ :
@linei^;@:@operand1o;
	;"from-size;"from_size;@;i^;i^;@;o:!Sass::Script::UnaryOperation	;:not;@;i^:@operando;
	;"relative-font-sizing;"relative_font_sizing;@;i^;i^0[o:Sass::Tree::WarnNode	:
@expro:Sass::Script::String	:
@type:string;@:@value"^$relative-font-sizing is false but a relative font size was passed to adjust-font-size-to;i_;@:@children[ ;i_o;=;["font-size;@;>;?;	[ ;o;
;;;o;%	;"from-size;&"from_size;@;ia;@; o;
;;';o;%	;"to-size;&"to_size;@;ia;@; o;%	;"font-unit;&"font_unit;@;ia;ia;ia;ia;@i o;A;"adjust-leading-to;@;#{ ;	[ ;ib;$[o;%	;"
lines;&"
lines;@;ibo;"
;"if;@;#{ ;ib;$[o;%	;"relative-font-sizing;&"relative_font_sizing;@;ibo;%	;"to-size;&"to_size;@;ibo;%	;"base-font-size;&"base_font_size;@;ib;i];$[[o;%;"to-size;&"to_size;@0[o;%;"
lines;&"
lines;@o;"
;"lines-for-font-size;@;#{ ;i];$[o;%	;"to-size;&"to_size;@;i][o;%;"from-size;&"from_size;@o;%	;"base-font-size;&"base_font_size;@;i]o;;i ;@;	[ ;["%/* Adjust a block to have different line height to maintain the rhythm.
 * $lines specifies how many multiples of the baseline rhythm each line of this
 * font should use up. It does not have to be an integer, but it defaults to the
 * smallest integer that is large enough to fit the font. */;ie;0o;2;"adjust-leading-to;T;@;	[o;=;["line-height;@;>;?;	[ ;o;"
;"rhythm;@;#{ ;ij;$[o;%	;"
lines;&"
lines;@;ijo;%	;"font-size;&"font_size;@;ij;ij;@i ;ii;$[[o;%;"
lines;&"
lines;@0[o;%;"font-size;&"font_size;@o;%	;"base-font-size;&"base_font_size;@;iio;;i ;@;	[ ;[""/* Calculate rhythm units. */;im;0o;);"rhythm;T;@;	[
u;11[o:Sass::Script::Operation
:@operator:and:@operand2o; 
;:neq;o:Sass::Script::Variable	:
@name"base-font-size:@underscored_name"base_font_size:@options{ :
@lineir;@:@operand1o;
	;"font-size;"font_size;@;ir;ir;@;o:!Sass::Script::UnaryOperation	;:not;@;ir:@operando;
	;"relative-font-sizing;"relative_font_sizing;@;ir;ir0[o:Sass::Tree::WarnNode	:
@expro:Sass::Script::String	:
@type:string;@:@value"^$relative-font-sizing is false but a relative font size was passed to the rhythm function;is;@:@children[ ;iso;;o;
;;;o;%	;"font-size;&"font_size;@;iu;@; o;
;;';o;%	;"base-line-height;&"base_line_height;@;iu;@; o;
;;';o;%	;"
lines;&"
lines;@;iu;@; o;%	;"font-unit;&"font_unit;@;iu;iu;iu;iu;"rhythm;@;	[ ;iu;0o;;i ;@;	[ ;["4/* Round the pixels down to nearest integer. */;iv;0u;1°[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:
@type:identifier:@options{ :@value"px:
@lineiw;@:@operand1o:Sass::Script::Funcall
:
@name"	unit;@:@keywords{ ;iw:
@args[o:Sass::Script::Variable	;"rhythm:@underscored_name"rhythm;@;iw;iw0[o:Sass::Tree::VariableNode:
@expro;
;"
floor;@;{ ;ix;[o;	;"rhythm;"rhythm;@;ix;"rhythm;@:@children[ ;ix:@guarded0o;*	;o;%	;"rhythm;&"rhythm;@;iz;@;	[ ;iz;iq;$[[o;%;"
lines;&"
lines;@o;;@¢;[ ;@;"1;i;io[o;%;"font-size;&"font_size;@o;%	;"base-font-size;&"base_font_size;@;ipo;;i ;@;	[ ;["Z/* Calculate the minimum multiple of rhythm units needed to contain the font-size. */;i};0o;);"lines-for-font-size;T;@;	[o;;o;"
;"if;@;#{ ;i|;$[o;%	;"round-to-nearest-half-line;&"round_to_nearest_half_line;@;io;
;;;o;;@¢;[ ;@;"2;i;i{;@; o;"
;"	ceil;@;#{ ;i{;$[o;
;;;o;%	;"base-line-height;&"base_line_height;@;i{;@; o;
;;';o;%	;"font-size;&"font_size;@;i{;@; o;;@¢;[ ;@;"2;i;i{;i{;i{;i{o;"
;"	ceil;@;#{ ;i|;$[o;
;;;o;%	;"base-line-height;&"base_line_height;@;i|;@; o;%	;"font-size;&"font_size;@;i|;i|;"
lines;@;	[ ;i|;0u;12[o:Sass::Script::Operation
:@operator:lt:@operand2o; 
;:
times;o:Sass::Script::Number:@denominator_units[ :@numerator_units[ :@options{ :@original"2:@valuei:
@linei};@:@operand1o:Sass::Script::Variable	:
@name"min-line-padding:@underscored_name"min_line_padding;@;i};i};@;o; 
;:
minus;o;	;"font-size;"font_size;@;i};@;o; 
;;	;o;	;"base-line-height;"base_line_height;@;i};@;o;	;"
lines;"
lines;@;i};i};i};i}0[o:Sass::Tree::VariableNode:
@expro; 
;:	plus;o:Sass::Script::Funcall
;"if;@:@keywords{ ;i~:
@args[o;	;"round-to-nearest-half-line;"round_to_nearest_half_line;@;i~o;
;@	;[ ;@;"0.5;f0.5;i~o;
;@	;[ ;@;"1;i;i~;@;o;	;"
lines;"
lines;@;i~;i~;"
lines;@:@children[ ;i~:@guarded0o;*	;o;%	;"
lines;&"
lines;@;i;@;	[ ;i;i~;$[[o;%;"font-size;&"font_size;@0o;;i ;@;	[ ;["L/* Apply leading whitespace. The $property can be margin or padding. */;i;0o;2;"leader;T;@;	[o;=;[o;%	;"property;&"property;@;i"	-top;@;>;?;	[ ;o;"
;"rhythm;@;#{ ;i;$[o;%	;"
lines;&"
lines;@;io;%	;"font-size;&"font_size;@;i;i;@i ;i;$[[o;%;"
lines;&"
lines;@o;;@¢;[ ;@;"1;i;i[o;%;"font-size;&"font_size;@o;%	;"base-font-size;&"base_font_size;@;i[o;%;"property;&"property;@o;	;;;@;"margin;io;;i ;@;	[ ;["//* Apply leading whitespace as padding. */;i;0o;2;"padding-leader;T;@;	[o;=;["padding-top;@;>;?;	[ ;o;"
;"rhythm;@;#{ ;i;$[o;%	;"
lines;&"
lines;@;io;%	;"font-size;&"font_size;@;i;i;@i ;i;$[[o;%;"
lines;&"
lines;@o;;@¢;[ ;@;"1;i;i[o;%;"font-size;&"font_size;@o;%	;"base-font-size;&"base_font_size;@;io;;i ;@;	[ ;["./* Apply leading whitespace as margin. */;i;0o;2;"margin-leader;T;@;	[o;=;["margin-top;@;>;?;	[ ;o;"
;"rhythm;@;#{ ;i;$[o;%	;"
lines;&"
lines;@;io;%	;"font-size;&"font_size;@;i;i;@i ;i;$[[o;%;"
lines;&"
lines;@o;;@¢;[ ;@;"1;i;i[o;%;"font-size;&"font_size;@o;%	;"base-font-size;&"base_font_size;@;io;;i ;@;	[ ;["M/* Apply trailing whitespace. The $property can be margin or padding. */;i;0o;2;"trailer;T;@;	[o;=;[o;%	;"property;&"property;@;i"-bottom;@;>;?;	[ ;o;"
;"rhythm;@;#{ ;i;$[o;%	;"
lines;&"
lines;@;io;%	;"font-size;&"font_size;@;i;i;@i ;i;$[[o;%;"
lines;&"
lines;@o;;@¢;[ ;@;"1;i;i[o;%;"font-size;&"font_size;@o;%	;"base-font-size;&"base_font_size;@;i[o;%;"property;&"property;@o;	;;;@;"margin;io;;i ;@;	[ ;["0/* Apply trailing whitespace as padding. */;i;0o;2;"padding-trailer;T;@;	[o;=;["padding-bottom;@;>;?;	[ ;o;"
;"rhythm;@;#{ ;i;$[o;%	;"
lines;&"
lines;@;io;%	;"font-size;&"font_size;@;i;i;@i ;i;$[[o;%;"
lines;&"
lines;@o;;@¢;[ ;@;"1;i;i[o;%;"font-size;&"font_size;@o;%	;"base-font-size;&"base_font_size;@;io;;i ;@;	[ ;["//* Apply trailing whitespace as margin. */;i;0o;2;"margin-trailer;T;@;	[o;=;["margin-bottom;@;>;?;	[ ;o;"
;"rhythm;@;#{ ;i;$[o;%	;"
lines;&"
lines;@;io;%	;"font-size;&"font_size;@;i;i;@i ;i;$[[o;%;"
lines;&"
lines;@o;;@¢;[ ;@;"1;i;i[o;%;"font-size;&"font_size;@o;%	;"base-font-size;&"base_font_size;@;io;;i ;@;	[ ;["V/* Shorthand mixin to apply whitespace for top and bottom margins and padding. */;i¡;0o;2;"rhythm;T;@;	[	o;A;"leader;@;#{ ;	[ ;i£;$[o;%	;"leader;&"leader;@;i£o;%	;"font-size;&"font_size;@;i£o;A;"padding-leader;@;#{ ;	[ ;i¤;$[o;%	;"padding-leader;&"padding_leader;@;i¤o;%	;"font-size;&"font_size;@;i¤o;A;"padding-trailer;@;#{ ;	[ ;i¥;$[o;%	;"padding-trailer;&"padding_trailer;@;i¥o;%	;"font-size;&"font_size;@;i¥o;A;"trailer;@;#{ ;	[ ;i¦;$[o;%	;"trailer;&"trailer;@;i¦o;%	;"font-size;&"font_size;@;i¦;i¢;$[
[o;%;"leader;&"leader;@o;;@¢;[ ;@;"0;i ;i¢[o;%;"padding-leader;&"padding_leader;@o;;@¢;[ ;@;"0;i ;i¢[o;%;"padding-trailer;&"padding_trailer;@o;;@¢;[ ;@;"0;i ;i¢[o;%;"trailer;&"trailer;@o;;@¢;[ ;@;"0;i ;i¢[o;%;"font-size;&"font_size;@o;%	;"base-font-size;&"base_font_size;@;i¢o;;i ;@;	[ ;["/* Apply a border and whitespace to any side without destroying the vertical
 * rhythm. The whitespace must be greater than the width of the border. */;i©;0o;2;"apply-side-rhythm-border;T;@;	[u;1>[o:Sass::Script::Operation
:@operator:and:@operand2o; 
;:neq;o:Sass::Script::Variable	:
@name"base-font-size:@underscored_name"base_font_size:@options{ :
@linei¬;@:@operand1o;
	;"font-size;"font_size;@;i¬;i¬;@;o:!Sass::Script::UnaryOperation	;:not;@;i¬:@operando;
	;"relative-font-sizing;"relative_font_sizing;@;i¬;i¬0[o:Sass::Tree::WarnNode	:
@expro:Sass::Script::String	:
@type:string;@:@value"c$relative-font-sizing is false but a relative font size was passed to apply-side-rhythm-border;i­;@:@children[ ;i­o;=;["border-o;%	;"	side;&"	side;@;i¯;T;@;>;?;	[o;=;["
style;@;>;?;	[ ;o;%	;"border-style;&"border_style;@;i°;i°;@i o;=;["
width;@;>;?;	[ ;o;
;;;o;%	;"font-size;&"font_size;@;i±;@; o;
;;';o;%	;"
width;&"
width;@;i±;@; o;%	;"font-unit;&"font_unit;@;i±;i±;i±;i±;@i ;o;;;;@;" ;i¯;@i o;=;["padding-o;%	;"	side;&"	side;@;i³;@;>;?;	[ ;o;
;;';o;
;;(;o;%	;"
width;&"
width;@;i³;@; o;
;;';o;%	;"base-line-height;&"base_line_height;@;i³;@; o;%	;"
lines;&"
lines;@;i³;i³;i³;@; o;
;;;o;%	;"font-size;&"font_size;@;i³;@; o;%	;"font-unit;&"font_unit;@;i³;i³;i³;i³;@i ;i«;$[
[o;%;"	side;&"	side;@0[o;%;"
width;&"
width;@o;;[ ;["px;@;"1px;i;i«[o;%;"
lines;&"
lines;@o;;@¢;[ ;@;"1;i;i«[o;%;"font-size;&"font_size;@o;%	;"base-font-size;&"base_font_size;@;i«[o;%;"border-style;&"border_style;@o;%	;" default-rhythm-border-style;&" default_rhythm_border_style;@;i«o;;i ;@;	[ ;["=/* Apply borders and whitespace equally to all sides. */;i¶;0o;2;"rhythm-borders;T;@;	[u;14[o:Sass::Script::Operation
:@operator:and:@operand2o; 
;:neq;o:Sass::Script::Variable	:
@name"base-font-size:@underscored_name"base_font_size:@options{ :
@linei¸;@:@operand1o;
	;"font-size;"font_size;@;i¸;i¸;@;o:!Sass::Script::UnaryOperation	;:not;@;i¸:@operando;
	;"relative-font-sizing;"relative_font_sizing;@;i¸;i¸0[o:Sass::Tree::WarnNode	:
@expro:Sass::Script::String	:
@type:string;@:@value"Y$relative-font-sizing is false but a relative font size was passed to rhythm-borders;i¹;@:@children[ ;i¹o;=;["border;T;@;>;?;	[o;=;["
style;@;>;?;	[ ;o;%	;"border-style;&"border_style;@;i¼;i¼;@i o;=;["
width;@;>;?;	[ ;o;
;;;o;%	;"font-size;&"font_size;@;i½;@; o;
;;';o;%	;"
width;&"
width;@;i½;@; o;%	;"font-unit;&"font_unit;@;i½;i½;i½;i½;@i ;o;;;;@;" ;i»;@i o;=;["padding;@;>;?;	[ ;o;
;;';o;
;;(;o;%	;"
width;&"
width;@;i¿;@; o;
;;';o;%	;"base-line-height;&"base_line_height;@;i¿;@; o;%	;"
lines;&"
lines;@;i¿;i¿;i¿;@; o;
;;;o;%	;"font-size;&"font_size;@;i¿;@; o;%	;"font-unit;&"font_unit;@;i¿;i¿;i¿;i¿;@i ;i·;$[	[o;%;"
width;&"
width;@o;;[ ;["px;@;"1px;i;i·[o;%;"
lines;&"
lines;@o;;@¢;[ ;@;"1;i;i·[o;%;"font-size;&"font_size;@o;%	;"base-font-size;&"base_font_size;@;i·[o;%;"border-style;&"border_style;@o;%	;" default-rhythm-border-style;&" default_rhythm_border_style;@;i·o;;i ;@;	[ ;[""/* Apply a leading border. */;iÂ;0o;2;"leading-border;T;@;	[o;A;"apply-side-rhythm-border;@;#{ ;	[ ;iÄ;$[
o;	;;;@;"top;iÄo;%	;"
width;&"
width;@;iÄo;%	;"
lines;&"
lines;@;iÄo;%	;"font-size;&"font_size;@;iÄo;%	;"border-style;&"border_style;@;iÄ;iÃ;$[	[o;%;"
width;&"
width;@o;;[ ;["px;@;"1px;i;iÃ[o;%;"
lines;&"
lines;@o;;@¢;[ ;@;"1;i;iÃ[o;%;"font-size;&"font_size;@o;%	;"base-font-size;&"base_font_size;@;iÃ[o;%;"border-style;&"border_style;@o;%	;" default-rhythm-border-style;&" default_rhythm_border_style;@;iÃo;;i ;@;	[ ;["#/* Apply a trailing border. */;iÇ;0o;2;"trailing-border;T;@;	[o;A;"apply-side-rhythm-border;@;#{ ;	[ ;iÉ;$[
o;	;;;@;"bottom;iÉo;%	;"
width;&"
width;@;iÉo;%	;"
lines;&"
lines;@;iÉo;%	;"font-size;&"font_size;@;iÉo;%	;"border-style;&"border_style;@;iÉ;iÈ;$[	[o;%;"
width;&"
width;@o;;[ ;["px;@;"1px;i;iÈ[o;%;"
lines;&"
lines;@o;;@¢;[ ;@;"1;i;iÈ[o;%;"font-size;&"font_size;@o;%	;"base-font-size;&"base_font_size;@;iÈ[o;%;"border-style;&"border_style;@o;%	;" default-rhythm-border-style;&" default_rhythm_border_style;@;iÈo;;i ;@;	[ ;["3/* Apply both leading and trailing borders. */;iÌ;0o;2;"horizontal-borders;T;@;	[o;A;"leading-border;@;#{ ;	[ ;iÎ;$[	o;%	;"
width;&"
width;@;iÎo;%	;"
lines;&"
lines;@;iÎo;%	;"font-size;&"font_size;@;iÎo;%	;"border-style;&"border_style;@;iÎo;A;"trailing-border;@;#{ ;	[ ;iÏ;$[	o;%	;"
width;&"
width;@;iÏo;%	;"
lines;&"
lines;@;iÏo;%	;"font-size;&"font_size;@;iÏo;%	;"border-style;&"border_style;@;iÏ;iÍ;$[	[o;%;"
width;&"
width;@o;;[ ;["px;@;"1px;i;iÍ[o;%;"
lines;&"
lines;@o;;@¢;[ ;@;"1;i;iÍ[o;%;"font-size;&"font_size;@o;%	;"base-font-size;&"base_font_size;@;iÍ[o;%;"border-style;&"border_style;@o;%	;" default-rhythm-border-style;&" default_rhythm_border_style;@;iÍo;;i ;@;	[ ;["0/* Alias for `horizontal-borders` mixin. */;iÒ;0o;2;"h-borders;T;@;	[o;A;"horizontal-borders;@;#{ ;	[ ;iÔ;$[	o;%	;"
width;&"
width;@;iÔo;%	;"
lines;&"
lines;@;iÔo;%	;"font-size;&"font_size;@;iÔo;%	;"border-style;&"border_style;@;iÔ;iÓ;$[	[o;%;"
width;&"
width;@o;;[ ;["px;@;"1px;i;iÓ[o;%;"
lines;&"
lines;@o;;@¢;[ ;@;"1;i;iÓ[o;%;"font-size;&"font_size;@o;%	;"base-font-size;&"base_font_size;@;iÓ[o;%;"border-style;&"border_style;@o;%	;" default-rhythm-border-style;&" default_rhythm_border_style;@;iÓ;i